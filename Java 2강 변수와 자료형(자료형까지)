Java Programming

2) 변수와 자료형 (자료형까지)

2-1) 컴퓨터는 데이터를 어떻게 표현하는가?
우리가 사용하는 모든 데이터는 컴퓨터 내부에서 0과 1로 이루어져있다.(반도체는 불 켜짐과 꺼짐을 0과 1로 구분하기 때문)
0 또는 1로 표현할 수 있는 최소 단위를 비트(bit)라고 부른다.
8비트가 모이면 1바이트(byte)가 된다.

- 10진수와 2진수
우리가 사용하는 숫자는 10진수이지만 0과 1로 표현되는 수인 2진수로 변환할 수 있어야 한다.]
컴퓨터 내부에서 A는 2진수 1000001로 표현된다 이를 '아스키' (ASCII)값이라 부른다.

-------------------------------------------------------------------------------
ASCII란? American Standard Code for Information Interchange의 약어로 미국 표준 협회가
제정한 규칙이다. 영문자, 숫자, 특수 문자를 8비트 값의 수로 미리 정의해 놓았다.
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
Question) 비트로 표현할 수 있는 수의 범위는?
비트 수가 n개 일 때, 2진수로 나타낼 수 있는 2의 n제곱 개이다.
- 한 개의 비트로 나타낼 수 있는 범위 : 0, 1 (2개)
- 두 새의 비트로 나타낼 수 있는 범위 : 00, 01, 10, 11 (4개)
-------------------------------------------------------------------------------

- 2진수, 16진수, 8진수
2진수를 사용할 경우 : 0B를 붙인다.  -> 0B1010
8진수를 사용할 경우 : 0을 붙인다.   -> 012
16진수를 사용할 경우 : 0X를 붙인다. -> 0XA

- 부호 있는 수를 표현하는 방법
양수와 음수를 사용하는 방법?
: 부호를 나타내는 비트는 맨 앞에 붙이며 부호 비트(Most Significant Bit; MSB)라고 부른다.
부호가 0이면 양수, 1이면 음수를 나타낸다.
예) 00000101이면 +5을 의미한다.
예1) 10000101이면 -5를 의미한다.
두 값을 더하면 0이 되어야 하지만 컴퓨터에서 표현할 -5는 5와 더했을 때 0이 되어야 하기에
프로그래밍 상에서는 '2의 보수'라는 표현을 사용한다.

-2의 보수???
보수? 보충해주는 수
예) 10진수 N이 있을때, 3에 대한 N의 보수는 3과 어떤 수를 합하여 N이 되는 수를 의미한다.
즉, N-3이 된다. N=10이라면 보수는 7이 된다.


2-2) 변수란 무엇인가?
프로그래밍에서 이렇게 변하는 값을 '변수'라 칭한다.
변수를 선언하기 위해 어떤 형태의 자료를 저장할 것인지 정해야 한다.
예) 사람의 나이는 정수형(int), 이름은 문자형(char) 등을 사용해야한다. 이를 '자료형'이라 부른다.
- 변수의 자료형을 선택하고 이름을 정하는 것 = '변수를 선언한다!'
예) int level; //정수형 변수 level을 선언
    level = 10; //값 10을 level 변수에 대입
"="은 '오른쪽 값을 왼쪽에 대입한다'는 의미로 사용된다. 

-------------------------------------------------------------------------------
package chap2;

public class Variable1 {
	public static void main(String [] args) {
		int level;
		level = 10;
		System.out.println(level);
	}
}
-------------------------------------------------------------------------------
-> level을 10으로 뽑아내는 방법

- 변수 초기화하기
-------------------------------------------------------------------------------
package chap2;

public class Variable2 {
	public static void main(String [] args) {
		int level = 10;		//level 변수 선언과 동시에 값을 대입(초기화)
		System.out.println(level);
	}

}
-------------------------------------------------------------------------------
-> level 변수를 먼저 선언한 후 값을 10으로 대입.

- 변수 이름 정하기
제약 사항
1. 변수 이름은 영문자(대문자, 소문자)나 숫자를 사용할 수 있고, 특수 문자 중에서 $,_만 사용할 수 있다.
2. 변수 이름은 숫자로 시작할 수 없습니다.
3. 자바에서 이미 사용 중인 예약어(reserved word: 미리 약속되어 있는 단어)는 사용할 수 없습니다. 예) int, while 등
표기법은 카멜 표기법(camel notation)으로 중간에 튀어 나온 대문자를 사용한다. 예) numberOfStudent


2-3) 변수가 저장되는 공간의 특성, 자료형
-  변수와 메모리
변수는 컴퓨터 내부의 메모리 공간에 저장된다.

-기본 자료형의 종류
java에서 제공하는 자료형은 기본 자료형과 참조 자료형으로 나뉜다.
) 기본 자료형 : 자바 라이브러리에서 기본으로 제공하며, 얼마만큼의 메모리를 어떻게 사용할 것인지가 이미 정해져 있다.

* 정수 자료형 : 양수, 음수, 0를 나타내는데 사용된다. 
byte형, short형, int형, long형 4가지 자료형이 있다. : 각 자료형은 메모리에서 사용하는 바이트 수와 용도에 따라 다르다.
  1       2      4      8   (바이트 크기)
 
- byte형
: 1바이트는 8비트로 수의 범위는 -2의 7제곱 ~ 2의 7제곱 - 1 이다.
- short형
: 2바이트로 유효 범위는 -2의 15제곱 ~ 2의 15제곱 - 1 
- int형
: 가장 많이 사용하는 자료형으로 유효 범위는 -2의 31 제곱 ~ 2의 31제곱 - 1로 꽤 큰 범위이다.

-------------------------------------------------------------------------------
package chap2;

public class IntegerVariable {
	public static void main(String[] args) {
		short sVal = 10;
		byte bVal = 20;
		System.out.println(sVal + bVal);
	}
	
}
-------------------------------------------------------------------------------
-> 프로그램이 실행되어 정수 값을 연산할 때 4바이트를 기본 단위로 하기 때문에 더한 결괏값은 int형으로 저장된다. 

-long형
: 정수를 표현하는 가장 큰 단위의 자료형으로 유효 범위는 -2의 63제곱 ~ -2의 63제곱 - 1 이다. 

1. int num1 = 12345678900;
2. long num2 = 12345678900;

1번은 int형으로 표현가능한 범위를 넘어서기 때문에 불가능하다.
2번은 자바의 기본 속성은 모든 정수 값을 int형으로 처리하기 때문에 long형으로 처리하라고 컴파일러로 알려주어야 한다. 
즉, long num2 = 12345678900L; 이런 식으로 숫자 뒤에 식별자를 붙여주어야 한다.
int형 범위 내부의 값인 long num = 1000; 은 식별자가 따로 필요하지 않다. 

* 문자 자료형
컴퓨터는 0과 1로만 표현할 수 있기에 '문자 세트'로 묶어 놓고 문자를 정해진 코드 값으로 변환하는 '문자 인코딩'을 실시한다.
(반대로 코드 값을 다시 문자로 변환하는 것을 '문자 디코딩'이라 한다.)

가장 기본이 되는 문자 인코딩은 아스키(ASCII) 코드이다. 1바이트 사용.
2바이트 이상을 사용할 경우에는 유니코드를 사용한다. 

char myChar = 'A';

-------------------------------------------------------------------------------
package chap2;

public class CharacterEx1 {
	public static void main(String[] args) {
		char ch1 = 'A';
		System.out.println(ch1);		//문자 출력
		System.out.println((int)ch1);	//문자에 해당하는 정수 값(아스키 코드 값) 출력
		
		char ch2 = 66;					//정수 값 대입
		System.out.println(ch2);		//정수 값에 해당하는 문자 출력
		
		int ch3 = 67;
		System.out.println(ch3);		//문자 정수 값 출력
		System.out.println((char)ch3);	//정수 값에 해당하는 문자 출력
		
	}
}
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
package chap2;

public class CharacterEx2 {
	public static void main(String [] args) {
		char ch1 = '한';
		char ch2 = '\uD55C';
		
		System.out.println(ch1);
		System.out.println(ch2);
	}
}
-------------------------------------------------------------------------------
한
한
-------------------------------------------------------------------------------
-> 유니코드(전 세계의 모든 문자를 처리할 수 있도록 만든 표준 문자 전산 처리 방식) 사용


-------------------------------------------------------------------------------
package chap2;

public class CharacterEx3 {
	public static void main(String [] args) {
		int a = 65;
		int b = -66;
		
		
		char a2 = 65;
		//char b2 = -66;
		
		System.out.println((char)a);
		System.out.println((char)b);
		System.out.println(a2);
	}
}
-------------------------------------------------------------------------------
A
?
A
-------------------------------------------------------------------------------
-> char형은 음수 값을 표현할 수 없다는 점을 생각해야한다. 



* 실수 자료형
: 부동 소수점 방식(가수 부분과 지수 부분을 나누어 실수를 표현)을 사용한다. 

float형(4바이트) : 부호 1비트, 지수부 8비트, 가수부 23비트로 총 32비트를 사용한다.
double형(8바이트) : 부호 1비트, 지수부 11비트, 가수부 52비트로 총 64비트를 사용한다. (java에서는 기본형으로 double형을 사용한다)

-------------------------------------------------------------------------------
package chap2;

public class DoubleEx1 {
	public static void main(String[] args) {
		double dnum = 3.14;
		float fnum = 3.14F;
		
		System.out.println(dnum);
		System.out.println(fnum);
	}
}
-------------------------------------------------------------------------------
3.14
3.14
-------------------------------------------------------------------------------

* 논리 자료형
: 어떤 변수의 참, 거직의 값을 나타내는데 사용한다. boolean형 하나만 사용된다.

boolean은 1바이트로 저장된다. true, false로 나뉜다.

-------------------------------------------------------------------------------
package chap2;

public class BooleanEx {
	public static void main(String [] args) {
		boolean isMarried = true;		//boolean 변수를 선언하고 초기화
		System.out.println(isMarried);
	}
}
-------------------------------------------------------------------------------
true
-------------------------------------------------------------------------------

- 자료형 없이 변수 선언하기 (자바 10부터 생긴 문법)
: 지역 변수 자료형 추론(local variable type inference) : 자료형을 쓰지 않고도 변수를 사용할 수 있다.

var num = 10;				int num = 10;
var dNum = 10.0;			double dNum = 10.0;
var str = "hello";			String str = "hello";

단, 1) str 변수는 이미 String으로 선언되었기에 다시 정수 값을 넣을 수 없다. 
    2) var 자료형 없이 변수를 선언하는 방법은 '지역 변수'만 가능하다 즉, {} 안에서만 사용가능하다. 

-------------------------------------------------------------------------------
package chap2;

public class TypeInference {
	public static void main(String [] args) {
		var i = 10;				//int i = 10으로 컴파일 됨.
		var j = 10.0;			//double j = 10.0으로 컴파일 됨.
		var str = "hello";		//String str = "hello"로 컴파일 됨.
		
		System.out.println(i);
		System.out.println(j);
		System.out.println(str);
		
		str = "test"; // 그러나 다른 문자형은 사용 가능하다!
		//str = 3;
	}
}
-------------------------------------------------------------------------------
10
10.0
hello
-------------------------------------------------------------------------------
-> 그러나, 자료형은 명시해주는 것이 좋다. (같은 프로그래머들 사이에서 알아보기 용이하기 때문이다)